// Code generated by MockGen. DO NOT EDIT.
// Source: fetchuser.go

// Package fetchuser is a generated GoMock package.
package fetchuser

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAPIFetcher is a mock of APIFetcher interface.
type MockAPIFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockAPIFetcherMockRecorder
}

// MockAPIFetcherMockRecorder is the mock recorder for MockAPIFetcher.
type MockAPIFetcherMockRecorder struct {
	mock *MockAPIFetcher
}

// NewMockAPIFetcher creates a new mock instance.
func NewMockAPIFetcher(ctrl *gomock.Controller) *MockAPIFetcher {
	mock := &MockAPIFetcher{ctrl: ctrl}
	mock.recorder = &MockAPIFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPIFetcher) EXPECT() *MockAPIFetcherMockRecorder {
	return m.recorder
}

// FetchData mocks base method.
func (m *MockAPIFetcher) FetchData(id int) (User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchData", id)
	ret0, _ := ret[0].(User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchData indicates an expected call of FetchData.
func (mr *MockAPIFetcherMockRecorder) FetchData(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchData", reflect.TypeOf((*MockAPIFetcher)(nil).FetchData), id)
}
